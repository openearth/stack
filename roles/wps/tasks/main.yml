---

- name: Download OpenEarthTools package
  subversion: repo=https://svn.oss.deltares.nl/repos/openearthtools/trunk/python/OpenEarthTools dest=~/src/OpenEarthTools
- name: Download OpenEarthTools wps processes
  subversion: repo=https://svn.oss.deltares.nl/repos/openearthtools/trunk/python/applications/wps dest=~/src/wps
# - name: Download fast
#   subversion: repo=https://svn.oss.deltares.nl/repos/openearthtools/trunk/python/applications/fast  dest=~/src/wps
- name: Download PyWPS (the couchdb version)
  git: repo=https://github.com/openearth/PyWPS.git version=couchprocesses dest=~/src/PyWPS

- name: Make WPS output directory
  file:
  args:
    path: "{{ wps_local_output }}"
    state: directory
# easy packages
- name: Install python packages
  pip: name={{ item }}
  args:
    virtualenv: "{{ venvabs }}"
  with_items:
    - shapely
    - gunicorn
    - Paste
    - PasteDeploy
    - waitress
    - couchdb
    - python-dateutil
    - pytz
    - netCDF4
    - statsmodels


# difficult packages
- name: Install tappy
  pip: name=tappy virtualenv={{ venvabs }} extra_args="--allow-external tappy --allow-unverified tappy"
- name: Install PyWPS
  pip: name=~/src/PyWPS virtualenv={{ venvabs }} extra_args=-e
- name: Install OpenEarth
  pip: name=~/src/OpenEarthTools virtualenv={{ venvabs }} extra_args=-e

# tasks file for wps
- name: Stop supervisor
  sudo: yes
  service: name=supervisor state=stopped


- name: Copy supervisor process
  sudo: yes
  template:
  args:
    src: supervisor_wps.conf
    dest: /etc/supervisor/conf.d/pywps.conf

- name: Copy pywps configuration
  template:
  args:
    src: pywps_wps.cfg
    dest: ~/pywps.cfg

- name: Start supervisor
  sudo: yes
  service: name=supervisor state=started

- name: Make wps website
  sudo: yes
  file: path=/var/www/wps state=directory



- name: Copy content
  sudo: yes
  synchronize: src=wps dest=/var/www rsync_path='sudo rsync'

- name: Download wpsbuilder (the web gui)
  git: repo=https://github.com/openearth/wpsbuilder.git  dest=~/src/wpsbuilder

- name: Install npm packages
  command: npm install
  args:
    chdir: ~/src/wpsbuilder

- name: Install bower packages
  command: ~/.node/bin/bower install --config.interactive=false
  args:
    chdir: ~/src/wpsbuilder

- name: Build website
  command: ~/.node/bin/grunt build
  args:
    chdir: ~/src/wpsbuilder

- name: Deploy content of dist file to wpsbuilder
  sudo: yes
  command: cp -r "{{ ansible_env['HOME'] }}/src/wpsbuilder/dist/" /var/www/wpsbuilder





# TODO: add to crontab find /tmp -name 'pywps-instance*' -type d -mtime +1 -exec rm -r {} \; #